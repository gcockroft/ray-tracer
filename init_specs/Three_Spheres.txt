#include "init.hpp"

scene* initScene(int image_height, int image_width) {
    scene* myScene = new scene();
    myScene->backgroundColor = vec3(0.3f,0.3f,0.3f);
    myScene->materials = initMaterials();
    myScene->lights = initLights();
    myScene->objs = initObjectList();
    myScene->ambientLight = vec3(1,1,1);
    myScene->cam = initCamera(image_height, image_width);

    return myScene;
}

vector<material> initMaterials() {
    vector<material> materials;

    vec3 diffuse = vec3(0.1f, 0.1f, 0.1f);
    vec3 specular = vec3();
    vec3 reflective = vec3();
    float shininess = 150;
    vec3 transparent = vec3();
    float ior = 1.52f;

    material ground_0 = material(diffuse, specular, transparent, reflective, shininess, ior);

    diffuse = vec3(0.05f, 0.69f, 0.23f);
    specular = vec3(.5f,.5f,.5f);
    reflective = vec3(0.2f, 0.4f, 0.20f);
    shininess = 50;
    transparent = vec3();
    ior = 0.7f;

    material big_sphere_1 = material(diffuse, specular, transparent, reflective, shininess, ior);

    diffuse = vec3(0.0f, 0.5, 1.0f);
    material little_sphere_2 = material(diffuse, specular, transparent, reflective, shininess, ior);

    diffuse = vec3(0.68f, 0.09f, 0.26f);
    transparent = vec3(.6f, .6f, .6f);
    material little_sphere_3 = material(diffuse, specular, transparent, reflective, shininess, ior);

    materials.push_back(ground_0);
    materials.push_back(big_sphere_1);
    materials.push_back(little_sphere_2);
    materials.push_back(little_sphere_3);
    
    return materials;
}

vector<light> initLights() {
    vector<light> lights;

    vec3 position = vec3(3.0f, 4.0f, 6.0f);
    vec3 color = vec3(.9f,.9f,.9f);
    light l1 = light(position, color);
    lights.push_back(l1);

    return lights;
}

objectList* initObjectList() {
    objectList *list = new objectList();

    vec3 a = vec3(-50,0,-50);
    vec3 b = vec3(-50,0,50);
    vec3 c = vec3(50,0,-50);
    triangle *ground_t0 = new triangle(a,b,c,0);

    a = vec3(50,0,-50);
    b = vec3(-50,0,50);
    c = vec3(50,0,50);
    triangle *ground_t1 = new triangle(a,b,c,0);

    vec3 cent = vec3(0.0f,1.5f,1.5f);
    float rad = 1.5f;

    sphere *s0 = new sphere(cent, rad, 1);

    cent = vec3(2.0f,.5f,2.5f);
    rad = 0.5f;
    sphere *s1 = new sphere(cent, rad, 2);

    cent = vec3(-2.0f,.5f,2.5f);
    sphere *s2 = new sphere(cent, rad, 3);

    list->append(ground_t0);
    list->append(ground_t1);
    list->append(s0);
    list->append(s1);
    list->append(s2);

    return list;
}

camera initCamera(int image_height, int image_width) {
    int img_height = image_height;
    int img_width = image_width;
    float fovy = 45.0f;
    vec3 *camEye = new vec3(0.0f, 2.5f, 6.0f);
    vec3 *lookAt = new vec3(0.0f, 0.0f, 0.0f);
    vec3 *up = new vec3(0,1,0);

    camera cam = camera(img_height, img_width, fovy, *camEye, *lookAt, *up);
    return cam;
}